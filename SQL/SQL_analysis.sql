---------------------------- (1). ATTRITION ANALYSIS
					SELECT ATTRITION, COUNT(*) AS 'COUNT'
					FROM IBM_HR_ANALYSIS
					GROUP BY ATTRITION


---------------------------- (2). ATTRITION BY JOB ROLE
					SELECT * FROM IBM_HR_ANALYSIS
					

					CREATE VIEW YES_ATTRITION
					AS 
						SELECT JOB_ROLE, ATTRITION, COUNT(*) AS 'ATTRITION_COUNT'
						FROM IBM_HR_ANALYSIS
						WHERE ATTRITION = 'YES'
						GROUP BY JOB_ROLE, ATTRITION

					CREATE VIEW TOT_EMP_JOB_ROLE
					AS
						SELECT JOB_ROLE, COUNT(EMPLOYEE_COUNT) AS 'TOTAL_EMP'
						FROM IBM_HR_ANALYSIS
						GROUP BY JOB_ROLE

					SELECT Y.JOB_ROLE, ATTRITION, ATTRITION_COUNT, TOTAL_EMP  -- RUN THIS
					FROM YES_ATTRITION Y
					INNER JOIN TOT_EMP_JOB_ROLE T
					ON Y.JOB_ROLE = T.JOB_ROLE

		
---------------------------- (3). AVERAGE MONTHLY INCOME BY DEPARTMENT
					
					SELECT * FROM IBM_HR_ANALYSIS

					SELECT DEPARTMENT, AVG(MONTHLY_INCOME) AS 'AVG_MONTHLY_INCOME'
					FROM IBM_HR_ANALYSIS
					GROUP BY DEPARTMENT
					
---------------------------- (4). AGE GROUP VS ATTRITION
					SELECT * FROM IBM_HR_ANALYSIS
					
					-- NEED TO CREATE A AGE_GROUP COLUMN

					ALTER TABLE IBM_HR_ANALYSIS ADD AGE_GROUP VARCHAR(20) 

					UPDATE IBM_HR_ANALYSIS 
					SET AGE_GROUP =
						CASE WHEN AGE < 30 THEN 'Under_30'
						     WHEN AGE >= 30 AND AGE <=40 THEN '30_To_40'
							 WHEN AGE >40 AND AGE<=50 THEN '41_To_50'
							 ELSE 'Above_50'
						END 
					
					
	---------------------------- RUN THIS 
					
						SELECT AGE_GROUP, ATTRITION,  COUNT(*) AS 'COUNT'
						FROM IBM_HR_ANALYSIS
						WHERE ATTRITION = 'YES'
						GROUP BY AGE_GROUP, ATTRITION 	 
